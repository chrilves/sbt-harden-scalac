package hardened

import sbt.Keys._
import sbt._

/**
 * This plugin helps you which operating systems are awesome
 */
object SbtHardenScalac extends AutoPlugin {

  /**
   * Defines all settings/tasks that get automatically imported,
   * when the plugin is enabled
   */
  object autoImport {
  }

  /**
   * Provide default settings
   */
  override def projectSettings: Seq[Setting[_]] = Seq(
      harden
    , optimize
  )

  def harden: Setting[_] = scalacOptions ++= Seq(
      "-Xfatal-warnings"                 // Fail the compilation if there are any warnings.
    , "-deprecation"                     // Emit warning and location for usages of deprecated APIs.
    , "-explaintypes"                    // Explain type errors in more detail.
    , "-feature"                         // Emit warning and location for usages of features that should be imported explicitly.
    , "-language:postfixOps"             // Allow postfix operator notation, such as `1 to 10 toList'
    , "-language:implicitConversions"    // Allow definition of implicit functions called views
    , "-language:higherKinds"            // Allow higher-kinded types
    , "-language:existentials"           // Existential types (besides wildcard types) can be written and inferred
    , "-language:experimental.macros"    // Allow macro defintion (besides implementation and application)
    , "-unchecked"                       // Enable detailed unchecked (erasure) warnings
    , "-Xfuture"                         // Turn on future language features.
    , "-Xlint:_"                         // Enable or disable specific warnings: `_' for all, `-Xlint:help' to list
    , "-Xlog-free-terms"                 // Print a message when reification creates a free term.
    , "-Xlog-free-types"                 // Print a message when reification resorts to generating a free type.
    , "-Xlog-reflective-calls"           // Print a message when a reflective method call is generated.
    , "-Xverify"                         // Verify generic signatures in generated bytecode (asm backend only).
    , "-Ybreak-cycles"                   // Attempt to break cycles encountered during typing
    , "-Yinline-warnings"                // Emit inlining warnings. (Normally surpressed due to high volume)
    , "-Yno-adapted-args"                // Do not adapt an argument list (either by inserting () or creating a tuple) to match the receiver.
    , "-Yreify-copypaste"                // Dump the reified trees in copypasteable representation.
    , "-Ywarn-dead-code"                 // Warn when dead code is identified.
    , "-Ywarn-inaccessible"              // Warn about inaccessible types in method signatures.
    , "-Ywarn-infer-any"                 // Warn when a type argument is inferred to be `Any`.
    , "-Ywarn-nullary-override"          // Warn when non-nullary `def f()' overrides nullary `def f'.
    , "-Ywarn-nullary-unit"              // Warn when nullary methods return Unit.
    , "-Ywarn-numeric-widen"             // Warn when numerics are widened.
    , "-Ywarn-unused"                    // Warn when local and private vals, vars, defs, and types are are unused.
    , "-Ywarn-unused-import"             // Warn when imports are unused.
    , "-Ywarn-value-discard"             // Warn when non-Unit expression results are unused.
  )

  def optimize : Setting[_] = scalacOptions ++= Seq(
      "-Xprint-icode"                    // Log internal icode to *.icode files after <phases>
    , "-optimize"                        // Generates faster bytecode by applying optimisations to the program
    , "-Yclosure-elim"                   // Perform closure elimination.
    , "-Yconst-opt"                      // Perform optimization with constant values.
    , "-Ydead-code"                      // Perform dead code elimination.
    , "-Ydelambdafy:inline"              // Strategy used for translating lambdas into JVM code. (inline,method) default:inline
    , "-Yinline"                         // Perform inlining when possible.
    , "-Yinline-handlers"                // Perform exception handler inlining when possible.
    , "-Yopt:_"                          // Enable optimizations: `_' for all, `-Yopt:help' to list
    , "-Ybackend:GenBCode"               // Choice of bytecode emitter. (GenASM,GenBCode) default:GenASM
    , "-Yshow-symkinds"                  // Print abbreviated symbol kinds next to symbol names.
    , "-Yshow-symowners"                 // Print owner identifiers next to symbol names.
  )
}

